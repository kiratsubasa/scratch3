{"remainingRequest":"D:\\workspace\\scratch3\\scratch3\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace\\scratch3\\scratch3\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\workspace\\scratch3\\scratch3\\src\\utils\\request.js","dependencies":[{"path":"D:\\workspace\\scratch3\\scratch3\\src\\utils\\request.js","mtime":1580804862370},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577006466531},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\babel-loader\\lib\\index.js","mtime":1577006466101},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1577006464844}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message } from 'element-ui';\nimport { getToken, setToken } from '@/utils/auth'; // Create axios instance\n// const service = axios.create({\n//   baseURL: process.env.MIX_BASE_API,\n//   // baseURL: \"http://fbilab.cc:8080\",\n//   headers: {\n//     'Content-Type': 'application/json'\n//   },\n//   timeout: 10000, // Request timeout\n// });\n\nvar service = axios.create(); // Request intercepter\n\nservice.interceptors.request.use(function (config) {\n  var token = getToken();\n\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + getToken(); // Set JWT token\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  // eslint-disable-next-line no-console\n  console.log(error); // for debug\n\n  Promise.reject(error);\n}); // response pre-processing\n\nservice.interceptors.response.use(function (response) {\n  if (response.headers.authorization) {\n    setToken(response.headers.authorization);\n    response.data.token = response.headers.authorization;\n  }\n\n  return response.data;\n}, function (error) {\n  var message = error.message;\n\n  if (error.response.data && error.response.data.errors) {\n    message = error.response.data.errors;\n  } else if (error.response.data && error.response.data.error) {\n    message = error.response.data.error;\n  }\n\n  Message({\n    message: message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["D:\\workspace\\scratch3\\scratch3\\src\\utils\\request.js"],"names":["axios","Message","getToken","setToken","service","create","interceptors","request","use","config","token","headers","error","console","log","Promise","reject","response","authorization","data","message","errors","type","duration"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,QAEO,YAFP;AAGA,SACEC,QADF,EAEEC,QAFF,QAGO,cAHP,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAN,EAAhB,C,CAEA;;AACAD,OAAO,CAACE,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR,MAAMC,KAAK,GAAGR,QAAQ,EAAtB;;AACA,MAAIQ,KAAJ,EAAW;AACTD,IAAAA,MAAM,CAACE,OAAP,CAAe,eAAf,IAAkC,YAAYT,QAAQ,EAAtD,CADS,CACiD;AAC3D;;AAED,SAAOO,MAAP;AACD,CARH,EASE,UAAAG,KAAK,EAAI;AACP;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAHO,CAGa;;AACpBG,EAAAA,OAAO,CAACC,MAAR,CAAeJ,KAAf;AACD,CAdH,E,CAiBA;;AACAR,OAAO,CAACE,YAAR,CAAqBW,QAArB,CAA8BT,GAA9B,CACE,UAAAS,QAAQ,EAAI;AACV,MAAIA,QAAQ,CAACN,OAAT,CAAiBO,aAArB,EAAoC;AAClCf,IAAAA,QAAQ,CAACc,QAAQ,CAACN,OAAT,CAAiBO,aAAlB,CAAR;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcT,KAAd,GAAsBO,QAAQ,CAACN,OAAT,CAAiBO,aAAvC;AACD;;AAED,SAAOD,QAAQ,CAACE,IAAhB;AACD,CARH,EASE,UAAAP,KAAK,EAAI;AACP,MAAIQ,OAAO,GAAGR,KAAK,CAACQ,OAApB;;AACA,MAAIR,KAAK,CAACK,QAAN,CAAeE,IAAf,IAAuBP,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBE,MAA/C,EAAuD;AACrDD,IAAAA,OAAO,GAAGR,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBE,MAA9B;AACD,GAFD,MAEO,IAAIT,KAAK,CAACK,QAAN,CAAeE,IAAf,IAAuBP,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBP,KAA/C,EAAsD;AAC3DQ,IAAAA,OAAO,GAAGR,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBP,KAA9B;AACD;;AAEDX,EAAAA,OAAO,CAAC;AACNmB,IAAAA,OAAO,EAAEA,OADH;AAENE,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAD,CAAP;AAKA,SAAOR,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAvBH;AA0BA,eAAeR,OAAf","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  Message\r\n} from 'element-ui';\r\nimport {\r\n  getToken,\r\n  setToken\r\n} from '@/utils/auth';\r\n\r\n// Create axios instance\r\n\r\n// const service = axios.create({\r\n//   baseURL: process.env.MIX_BASE_API,\r\n//   // baseURL: \"http://fbilab.cc:8080\",\r\n//   headers: {\r\n//     'Content-Type': 'application/json'\r\n//   },\r\n//   timeout: 10000, // Request timeout\r\n// });\r\n\r\nconst service = axios.create();\r\n\r\n// Request intercepter\r\nservice.interceptors.request.use(\r\n  config => {\r\n    const token = getToken();\r\n    if (token) {\r\n      config.headers['Authorization'] = 'Bearer ' + getToken(); // Set JWT token\r\n    }\r\n\r\n    return config;\r\n  },\r\n  error => {\r\n    // Do something with request error\r\n    // eslint-disable-next-line no-console\r\n    console.log(error); // for debug\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n// response pre-processing\r\nservice.interceptors.response.use(\r\n  response => {\r\n    if (response.headers.authorization) {\r\n      setToken(response.headers.authorization);\r\n      response.data.token = response.headers.authorization;\r\n    }\r\n\r\n    return response.data;\r\n  },\r\n  error => {\r\n    let message = error.message;\r\n    if (error.response.data && error.response.data.errors) {\r\n      message = error.response.data.errors;\r\n    } else if (error.response.data && error.response.data.error) {\r\n      message = error.response.data.error;\r\n    }\r\n\r\n    Message({\r\n      message: message,\r\n      type: 'error',\r\n      duration: 5 * 1000,\r\n    });\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default service;"]}]}