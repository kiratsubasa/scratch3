{"remainingRequest":"D:\\workspace\\scratch3\\scratch3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\scratch3\\scratch3\\src\\components\\searchBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\scratch3\\scratch3\\src\\components\\searchBar.vue","mtime":1580884945979},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577006466531},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\babel-loader\\lib\\index.js","mtime":1577006466101},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1577006481395},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577006466531},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\vue-loader\\lib\\index.js","mtime":1577006478648}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nexport default {\r\n    props: ['searchPlaceholder','search-lists'],\r\n    data() {\r\n        return {\r\n            drawerStatus: false,\r\n            searchQuery:'',\r\n            isHidden: true,\r\n            searchStatus: false\r\n        }\r\n    },\r\n    computed: {\r\n        filteredResources (){\r\n            if(this.searchQuery){\r\n                return this.searchLists.filter((item)=>{\r\n                    return item.title.includes(this.searchQuery);\r\n            })\r\n            }else{\r\n                return this.searchLists;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        search: function(){\r\n            this.$router.push({path: this.$route.path , query: {search: this.searchQuery} });\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["searchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"searchBar.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\r\n#searchBox(@click='searchStatus=false')\r\n    .input-group\r\n        input.search(type='text' :placeholder='searchPlaceholder' v-model='searchQuery' @keyup.enter=\"search\")\r\n        button.searchButton(v-on:click=\"isHidden=false\" @click=\"search\")\r\n            i.mdi.mdi-magnify(aria-hidden='true')\r\n        .search-previewBlock\r\n            .search-preview(v-if=\"searchQuery\" v-for='(item,index) in filteredResources' :key=\"index\")\r\n                        md-card(md-with-hover='' )\r\n                            md-ripple\r\n                                a#myhref(:href='\"/NA1/\"+item.id')\r\n                                    md-card-header\r\n                                        .sm-title {{item.title}}\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    props: ['searchPlaceholder','search-lists'],\r\n    data() {\r\n        return {\r\n            drawerStatus: false,\r\n            searchQuery:'',\r\n            isHidden: true,\r\n            searchStatus: false\r\n        }\r\n    },\r\n    computed: {\r\n        filteredResources (){\r\n            if(this.searchQuery){\r\n                return this.searchLists.filter((item)=>{\r\n                    return item.title.includes(this.searchQuery);\r\n            })\r\n            }else{\r\n                return this.searchLists;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        search: function(){\r\n            this.$router.push({path: this.$route.path , query: {search: this.searchQuery} });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"sass\">\r\n@import \"@/style/common.sass\"\r\n\r\n</style>\r\n\r\n"]}]}