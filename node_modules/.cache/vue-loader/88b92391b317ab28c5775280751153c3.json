{"remainingRequest":"D:\\workspace\\scratch3\\scratch3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\scratch3\\scratch3\\src\\components\\cardView.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace\\scratch3\\scratch3\\src\\components\\cardView.vue","mtime":1579359334511},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577006466531},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1577006478360},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\babel-loader\\lib\\index.js","mtime":1577006466101},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1577006481395},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577006466531},{"path":"D:\\workspace\\scratch3\\scratch3\\node_modules\\vue-loader\\lib\\index.js","mtime":1577006478648}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport SearchBar from '@/components/searchBar.vue'\r\nexport default {\r\n    components: {\r\n        SearchBar\r\n    },\r\n    props: ['page-title','search-placeholder','article-list','typeList'],\r\n    data() {\r\n        return {\r\n            pageDataNum: 8,\r\n            currentPage: 1,\r\n            totalPage: 1,\r\n            firstPage: '第一頁',\r\n            prev: '上一頁',\r\n            next: '下一頁',\r\n            finalPage: '最末頁',\r\n            theArticleList: '',\r\n            selectedQuery: '',\r\n            searchStatus: false,\r\n            searchQuery: ''\r\n        }\r\n    },\r\n    watch: {\r\n        currentPage: function(page){\r\n            this.$router.push({query: {page: page} });\r\n            window.scrollTo(0,0);\r\n        },\r\n        selectedQuery: function(query) {\r\n            this.theArticleList = this.articleList.filter((item)=>{\r\n                return item.type.includes(query);\r\n            })\r\n        },\r\n        searchQuery: function(query){\r\n            this.theArticleList = this.articleList.filter((item)=>{\r\n                if(item.title.includes(query)){\r\n                    this.searchStatus = true;\r\n                    return item.title.includes(query);\r\n                }\r\n            })\r\n        },\r\n        theArticleList: function(){\r\n            this.pageInit();\r\n        },\r\n        '$route' (){\r\n            this.searchInit();\r\n        }\r\n    },\r\n    beforeMount(){\r\n        this.searchInit();\r\n        this.pageInit();\r\n        this.selectedQuery = this.$route.params.id;\r\n        if(this.$route.query.page)\r\n            this.currentPage = this.$route.query.page;\r\n    },\r\n    methods: {\r\n        pageInit: function(){\r\n            this.totalPage = Math.ceil(this.theArticleList.length/this.pageDataNum);\r\n        },\r\n        setPage: function(page) {\r\n            if (page <= 0 || page > this.totalPage) {\r\n                return;\r\n            }\r\n            else{\r\n                this.currentPage = page;\r\n            }\r\n        },\r\n        changePath: function(idx){\r\n            this.$router.push({ path: this.theArticleList[idx].link})\r\n        },\r\n        searchInit: function(){\r\n            if(this.$route.query.search)\r\n                this.searchQuery = this.$route.query.search;\r\n            else\r\n                this.theArticleList = this.articleList;\r\n        },\r\n        beforeEnter: function (el) {\r\n            el.style.opacity = 0\r\n            el.style.height = 0\r\n        },\r\n        enter: function (el, done) {\r\n            var delay = el.dataset.index * 150\r\n        setTimeout(function () {\r\n            Velocity(\r\n                el,\r\n                { opacity: 1, height: '1.6em' },\r\n                { complete: done }\r\n                )\r\n            }, delay)\r\n        },\r\n        leave: function (el, done) {\r\n            var delay = el.dataset.index * 150\r\n        setTimeout(function () {\r\n            Velocity(\r\n            el,\r\n            { opacity: 0, height: 0 },\r\n            { complete: done }\r\n            )\r\n        }, delay)\r\n    }\r\n    }\r\n}\r\n\r\n",{"version":3,"sources":["cardView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"cardView.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\r\n#app\r\n    .listPageContent \r\n        SearchBar.searchBar-list(:searchPlaceholder='searchPlaceholder' :search-lists='theArticleList')\r\n        h1#listPageTitle {{pageTitle}}\r\n        .markBlockContainer\r\n            router-link.markBlock(style=\"color: #333; text-decoration: none;\" v-for='(typ,t) in typeList' :key='t' :to=\"typ\") {{typ}}\r\n        .cardContainer      \r\n            #Card(v-for=\"idx in pageDataNum\" v-if=\"theArticleList[idx+(currentPage-1)*pageDataNum-1]\")  \r\n                .cardcontentContainer\r\n                    .ListImage(:style=\"{'background-image': 'url(' + theArticleList[idx+(currentPage-1)*pageDataNum-1].src + ')'}\") \r\n                    .CardTextBlock(@click=\"changePath(idx+(currentPage-1)*pageDataNum-1)\")\r\n                        .ListTypeBlock {{theArticleList[idx+(currentPage-1)*pageDataNum-1].type}}\r\n                        .ListTitle {{theArticleList[idx+(currentPage-1)*pageDataNum-1].title}}\r\n                        .ListContent {{theArticleList[idx+(currentPage-1)*pageDataNum-1].content.text[0]}}\r\n\r\n        a#myhref.pageBtn.firstPage(v-if=\"currentPage!=1\" @click=\"setPage(1)\") {{ firstPage }}\r\n        a#myhref.pageBtn.previous(v-if=\"currentPage!=1\" @click=\"setPage(currentPage - 1)\") {{ prev }}\r\n        select.pageSel(v-model=\"currentPage\")\r\n            option(v-for=\"idx in totalPage\") {{ idx }}\r\n        a#myhref.pageBtn.next(v-if=\"currentPage!=totalPage\" @click=\"setPage(currentPage + 1)\") {{ next }}\r\n        a#myhref.pageBtn.finalPage(v-if=\"currentPage!=totalPage\" @click=\"setPage(totalPage)\") {{ finalPage }}\r\n</template>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/velocity/1.2.3/velocity.min.js\"></script>\r\n<script>\r\nimport SearchBar from '@/components/searchBar.vue'\r\nexport default {\r\n    components: {\r\n        SearchBar\r\n    },\r\n    props: ['page-title','search-placeholder','article-list','typeList'],\r\n    data() {\r\n        return {\r\n            pageDataNum: 8,\r\n            currentPage: 1,\r\n            totalPage: 1,\r\n            firstPage: '第一頁',\r\n            prev: '上一頁',\r\n            next: '下一頁',\r\n            finalPage: '最末頁',\r\n            theArticleList: '',\r\n            selectedQuery: '',\r\n            searchStatus: false,\r\n            searchQuery: ''\r\n        }\r\n    },\r\n    watch: {\r\n        currentPage: function(page){\r\n            this.$router.push({query: {page: page} });\r\n            window.scrollTo(0,0);\r\n        },\r\n        selectedQuery: function(query) {\r\n            this.theArticleList = this.articleList.filter((item)=>{\r\n                return item.type.includes(query);\r\n            })\r\n        },\r\n        searchQuery: function(query){\r\n            this.theArticleList = this.articleList.filter((item)=>{\r\n                if(item.title.includes(query)){\r\n                    this.searchStatus = true;\r\n                    return item.title.includes(query);\r\n                }\r\n            })\r\n        },\r\n        theArticleList: function(){\r\n            this.pageInit();\r\n        },\r\n        '$route' (){\r\n            this.searchInit();\r\n        }\r\n    },\r\n    beforeMount(){\r\n        this.searchInit();\r\n        this.pageInit();\r\n        this.selectedQuery = this.$route.params.id;\r\n        if(this.$route.query.page)\r\n            this.currentPage = this.$route.query.page;\r\n    },\r\n    methods: {\r\n        pageInit: function(){\r\n            this.totalPage = Math.ceil(this.theArticleList.length/this.pageDataNum);\r\n        },\r\n        setPage: function(page) {\r\n            if (page <= 0 || page > this.totalPage) {\r\n                return;\r\n            }\r\n            else{\r\n                this.currentPage = page;\r\n            }\r\n        },\r\n        changePath: function(idx){\r\n            this.$router.push({ path: this.theArticleList[idx].link})\r\n        },\r\n        searchInit: function(){\r\n            if(this.$route.query.search)\r\n                this.searchQuery = this.$route.query.search;\r\n            else\r\n                this.theArticleList = this.articleList;\r\n        },\r\n        beforeEnter: function (el) {\r\n            el.style.opacity = 0\r\n            el.style.height = 0\r\n        },\r\n        enter: function (el, done) {\r\n            var delay = el.dataset.index * 150\r\n        setTimeout(function () {\r\n            Velocity(\r\n                el,\r\n                { opacity: 1, height: '1.6em' },\r\n                { complete: done }\r\n                )\r\n            }, delay)\r\n        },\r\n        leave: function (el, done) {\r\n            var delay = el.dataset.index * 150\r\n        setTimeout(function () {\r\n            Velocity(\r\n            el,\r\n            { opacity: 0, height: 0 },\r\n            { complete: done }\r\n            )\r\n        }, delay)\r\n    }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"sass\">\r\n@import \"@/style/common.sass\"\r\n#Card\r\n    width: 240px\r\n    border: 1px $c-primary solid\r\n    border-radius: 3px\r\n    margin: 10px\r\n    -webkit-box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.3)\r\n    box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.3)\r\n    color: #333\r\n    text-decoration:none\r\n\r\n.CardTextBlock \r\n    text-align: left\r\n.cardContainer\r\n    display: flex\r\n    flex-wrap: wrap\r\n    margin-bottom: 50px\r\n</style>\r\n\r\n"]}]}